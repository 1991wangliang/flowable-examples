[
  {
    "name": "org.flowable.engine.impl.persistence.entity.ExecutionEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.ByteArrayRefTypeHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.ByteArrayRef",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },

  {
    "name": "org.flowable.engine.compatibility.DefaultFlowable5CompatibilityHandlerFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.compatibility.Flowable5CompatibilityHandlerFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.compatibility.Flowable5CompatibilityHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.DefaultProcessLocalizationManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ProcessInstanceQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ProcessInstanceQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetDeploymentResourceNamesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.InjectParallelEmbeddedSubProcessCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetRenderedStartFormCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetEntityLinkParentsForProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeploymentSettings",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetIdentityLinksForTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTypeCommentsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetExecutionVariablesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ProcessInstanceMigrationBatchCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteHistoricProcessInstancesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTaskEventCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetStartFormModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.InjectParallelUserTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.AddIdentityLinkForProcessDefinitionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SetDeploymentParentDeploymentIdCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.AddEditorSourceExtraForModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.MessageEventReceivedCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetCommentCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DispatchEventCommand",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.FindActiveActivityIdsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetProcessDefinitionHistoryLevelModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetEntityLinkChildrenWithSameRootAsProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.RemoveTaskVariablesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTaskVariableInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.HasExecutionVariableCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.IsProcessDefinitionSuspendedCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTaskDataObjectsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetEntityLinkParentsForTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.NeedsActiveExecutionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.CompleteAdhocSubProcessCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.RedeployV5ProcessDefinitionsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetBatchPartCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.AbstractSetProcessInstanceStateCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetDeploymentProcessDiagramLayoutCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteHistoricTaskLogEntryByLogNumberCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetDeploymentProcessModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ProcessInstanceMigrationCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SetProcessDefinitionCategoryCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.InjectEmbeddedSubProcessInProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.AbstractSetProcessDefinitionStateCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.NeedsActiveTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SetProcessInstanceBusinessKeyCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetProcessDefinitionInfoCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetHistoricEntityLinkParentsForTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteCommentCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ExecuteActivityForAdhocSubProcessCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SaveCommentCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetDeploymentResourceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SetProcessDefinitionVersionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ValidateTaskRelatedEntityCountCfgCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetAllBatchesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.AbstractExternalWorkerJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteHistoricProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetDeploymentProcessDefinitionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ClaimTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.HasTaskVariableCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTasksLocalVariablesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.AddIdentityLinkForProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ActivateProcessDefinitionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetProcessInstanceEventsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTaskEventsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SetTaskVariablesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.IsFlowable5ProcessDefinitionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.AddEventConsumerCommand",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.AbstractDynamicInjectionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTaskFormModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.FindBatchesBySearchKeyCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ResolveTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.StartProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SetExecutionVariablesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetExecutionsVariablesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTaskFormCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.CompleteTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetBpmnModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SaveAttachmentCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetModelEditorSourceExtraCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetIdentityLinksForProcessDefinitionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SaveTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteMultiInstanceExecutionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.EvaluateConditionalEventsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetIdentityLinksForProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.NeedsActiveProcessDefinitionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.AddIdentityLinkCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DelegateTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.TriggerCaseTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteAttachmentCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeployCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SignalEventReceivedCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetSubTasksCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.CreateAttachmentCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ChangeActivityStateCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ExternalWorkerJobCompleteCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.AddEventListenerCommand",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetHistoricEntityLinkChildrenWithSameRootAsProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SetProcessInstanceNameCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetExecutionVariableInstancesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetProcessInstanceMigrationBatchResultCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.InjectUserTaskInProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SetDeploymentCategoryCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetProcessInstanceAttachmentsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.AbstractCustomSqlExecution",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetExecutionVariableInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteEventLogEntry",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetRenderedTaskFormCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetAttachmentCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetPotentialStarterUsersCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SetTaskDueDateCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ChangeDeploymentTenantIdCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteHistoricTaskInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTaskCommentsByTypeCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetAppResourceModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SubmitTaskFormCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ValidateExecutionRelatedEntityCountCfgCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetAppResourceObjectCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetActiveAdhocSubProcessesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteRelatedDataOfRemovedHistoricProcessInstancesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.StartProcessInstanceAsyncCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetAttachmentContentCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.TriggerCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.StartProcessInstanceByMessageCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SaveModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.CompleteTaskWithFormCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.JobRetryCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetDataObjectsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SaveProcessDefinitionInfoCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.RescheduleTimerJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteTaskAndActivityDataOfRemovedHistoricProcessInstancesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetExecutionVariableCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetEventLogEntriesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.AddEditorSourceForModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetHistoricEntityLinkChildrenForProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetHistoricIdentityLinksForTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetPotentialStarterGroupsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteHistoricActivityInstancesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SuspendProcessDefinitionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTaskVariableInstancesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.HandleHistoryCleanupTimerJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SubmitStartFormCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetFormDefinitionsForProcessDefinitionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetDeploymentProcessDiagramCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.RemoveEventConsumerCommand",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.AddMultiInstanceExecutionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTaskVariablesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetEntityLinkChildrenForProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ExecuteCustomSqlCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ValidateBpmnModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SetTaskPriorityCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ClearProcessInstanceLockTimesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetBatchDocumentCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ValidateV5EntitiesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.CreateModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ChangeDeploymentTenantIdCmd$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTaskCommentsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTaskDataObjectCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteBatchCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ActivateProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.AddCommentCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetFormKeyCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteIdentityLinkForProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetStartFormCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteDeploymentCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.FindBatchPartsByBatchIdCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ExternalWorkerJobBpmnErrorCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SetDeploymentKeyCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetProcessInstanceCommentsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.NewTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTableNameCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.RemoveExecutionVariablesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteIdentityLinkCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTaskVariableCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.DeleteIdentityLinkForProcessDefinitionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.RemoveEventListenerCommand",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetDataObjectCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetTaskAttachmentsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetHistoricEntityLinkChildrenForTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetNextIdBlockCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetDecisionsForProcessDefinitionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.SuspendProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetEntityLinkChildrenForTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.ProcessInstanceMigrationValidationCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetBatchPartDocumentCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.CreateTaskCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetHistoricEntityLinkParentsForProcessInstanceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetEnabledActivitiesForAdhocSubProcessCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmd.GetModelEditorSourceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.HistoricActivityInstanceQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.NativeModelQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ManagementServiceImpl$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.TaskBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.repository.DefaultProcessDefinitionLocalizationManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.repository.VerifyDeploymentMergeStrategy",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.repository.AddAsOldDeploymentMergeStrategy",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.repository.DeploymentBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.repository.MergeByDateDeploymentMergeStrategy",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.repository.AddAsNewDeploymentMergeStrategy",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.StringFormType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.EnumFormType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.FormDataImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.FormReference",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.FormPropertyImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.FormHandlerHelper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.DefaultFormHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.DefaultTaskFormHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.BooleanFormType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.StartFormDataImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.FormTypes",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.LongFormType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.StartFormHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.FormPropertyHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.DefaultStartFormHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.FormEngine",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.TaskFormHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.FormData",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.JuelFormEngine",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.DateFormType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.DoubleFormType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.FormHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.form.TaskFormDataImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.HistoryServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.dynamic.DynamicEmbeddedSubProcessBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.dynamic.DefaultDynamicStateManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.dynamic.BaseDynamicSubProcessInjectUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.dynamic.MoveExecutionEntityContainer$FlowElementMoveEntry",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.dynamic.ProcessInstanceChangeState",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.dynamic.MoveExecutionEntityContainer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.dynamic.DynamicSubProcessParallelInjectUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.dynamic.DynamicUserTaskCallback",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.dynamic.AbstractDynamicStateManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.dynamic.DynamicSubProcessJoinInjectUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.dynamic.DynamicUserTaskBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.context.Context",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.context.Flowable5CompatibilityContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.context.ExecutionContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.context.BpmnOverrideContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.context.BpmnOverrideContext$ResourceBundleControl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.scripting.JuelScriptEngineFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.scripting.VariableScopeResolverFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.scripting.ScriptCondition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.scripting.JuelScriptEngine",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.scripting.JuelScriptEngine$ScriptContextFunctionMapper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.scripting.JuelScriptEngine$JuelCompiledScript",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.scripting.VariableScopeResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.scripting.JuelScriptEngine$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.scripting.JuelScriptEngine$ScriptContextVariableMapper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.app.AppResourceConverterImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.app.AppDeployer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.app.RulesHelper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.DynamicBpmnServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.RepositoryServiceImpl$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ActivityInstanceQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.HistoricDetailQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.CorrelationUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.Flowable5Util$2",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.ProcessInstanceHelper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.ExecutionGraphUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.io.ResourceStreamSource",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.Flowable5Util$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.EngineServiceUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.condition.ConditionUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.EventUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.ProcessDefinitionUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.CountingEntityUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.EntityLinkUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.TaskHelper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.JobUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.EventSubscriptionUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.CommandContextUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.Flowable5Util",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.TimerUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.EventInstanceBpmnUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.BpmnLoggingSessionUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.util.IdentityLinkUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.HistoricDetailQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.variable.BpmnAggregation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.variable.ParallelMultiInstanceLoopVariable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.variable.ParallelMultiInstanceLoopVariableType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.variable.BpmnAggregatedVariableType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.RuntimeServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.RepositoryServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.NativeDeploymentQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.SchemaOperationProcessEngineClose",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.el.JuelExpression",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.el.FixedValue",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.el.DateUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.el.ProcessVariableScopeELResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.el.FlowableDateFunctionDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.el.ProcessExpressionManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.el.UelExpressionCondition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.Transformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.LongToInteger",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.LongToString",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.Identity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.ComposedTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.StringToBigDecimal",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.AbstractTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.BigDecimalToString",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.BooleanToString",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.IntegerToString",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.DateToString",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.StringToBoolean",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.StringToDate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.StringToLong",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.StringToInteger",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.transformer.IntegerToLong",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ProcessEngineImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.externalworker.ExternalWorkerCompletionBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.Condition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.NativeHistoricDetailQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.NativeProcessDefinitionQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.formhandler.DefaultFormFieldHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.runtime.MoveActivityIdContainer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.runtime.ProcessInstanceBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.runtime.MoveExecutionIdContainer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.runtime.ChangeActivityStateBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.runtime.callback.ProcessInstanceState",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ModelQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ProcessInstanceHistoryLogQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.eventregistry.BpmnEventRegistryEventConsumer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cmmn.CaseInstanceService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.invocation.ExpressionGetInvocation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.invocation.ExpressionInvocation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.invocation.JavaDelegateInvocation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.invocation.DelegateInvocation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.invocation.DefaultDelegateInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.invocation.ExecutionListenerInvocation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.invocation.ExpressionSetInvocation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.invocation.TaskListenerInvocation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.invocation.FutureJavaDelegateInvocation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.InactiveActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.FlowableCollectionHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.JsonVariableAggregator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.ActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.ActivityBehaviorInvocation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.SubProcessActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.ActivityWithMigrationContextBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.ReadOnlyDelegateExecutionImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.TriggerableActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.BaseVariableAggregatorContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.delegate.InterruptibleActivityBehaviour",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.DeploymentQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.function.TaskGetFunctionDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.HistoricProcessInstanceQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.TaskCompletionBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.TaskServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.DefaultInternalJobCompatibilityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.JtaProcessEngineConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.multitenant.MultiSchemaMultiTenantProcessEngineConfiguration$2",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.multitenant.MultiSchemaMultiTenantProcessEngineConfiguration$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.multitenant.ExecuteSchemaOperationCommand",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.multitenant.MultiSchemaMultiTenantProcessEngineConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.BpmnParseFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.DefaultTaskAssignmentManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.JpaHelper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.StandaloneInMemProcessEngineConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.ProcessEngineConfigurationImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.ServiceInvoker",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.ProcessEngineConfigurationImpl$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.DefaultInternalJobManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.DefaultTaskVariableScopeResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.DelegateExpressionFieldInjectionMode",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.StandaloneProcessEngineConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.DefaultInternalJobCompatibilityManager$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.PerformanceSettings",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.DefaultBpmnParseFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.DefaultTaskLocalizationManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.HistoricProcessInstanceQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ModelQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ManagementServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.webservice.SyncWebServiceClient",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.webservice.SyncWebServiceClientFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.webservice.WSOperation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.webservice.WSService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.NativeHistoricActivityInstanceQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.NativeActivityInstanceQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.SchemaOperationsProcessEngineBuild",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.QueryOperator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.NativeHistoricProcessInstanceQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.HistoricActivityInstanceQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ProcessDefinitionQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.BoundaryCancelEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.BoundaryMessageEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ServiceTaskExpressionActivityBehavior$FutureCompleteAction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ErrorEndEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.TerminateEndEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.MailActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.EventSubProcessErrorStartEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ExclusiveGatewayActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.BoundaryEscalationEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.DmnActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ReceiveEventTaskActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ManualTaskActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.EventSubProcessEscalationStartEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ReceiveTaskActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.IntermediateCatchMessageEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.IntermediateThrowCompensationEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.GatewayActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.BoundaryCompensateEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.TaskActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.EventSubProcessSignalStartEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.AbstractBpmnActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.IntermediateCatchTimerEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.IntermediateCatchConditionalEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ParallelGatewayActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ServiceTaskDelegateExpressionActivityBehavior$FutureJavaDelegateCompleteAction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.EventSubProcessMessageStartEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.WebServiceActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.IntermediateCatchEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.SendEventTaskActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.FlowNodeActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ExternalWorkerTaskActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ServiceTaskExpressionActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.SubProcessActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ServiceTaskDelegateExpressionActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.SequentialMultiInstanceBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ServiceTaskFutureJavaDelegateActivityBehavior$FutureJavaDelegateCompleteAction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.EventBasedGatewayActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.IntermediateCatchEventRegistryEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ParallelMultiInstanceBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.NoneEndEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.EscalationEndEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ScriptTaskActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.MultiInstanceActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.BoundaryEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.IntermediateThrowNoneEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.IntermediateCatchSignalEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.CallActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ServiceTaskJavaDelegateActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.MailActivityBehavior$ContentItemDataSourceWrapper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.IntermediateThrowEscalationEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.EventSubProcessActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.InclusiveGatewayActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.BoundaryConditionalEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.BpmnActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.AdhocSubProcessActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.IntermediateThrowSignalEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.UserTaskActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.CancelEndEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ShellActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.BoundaryEventRegistryEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.TransactionActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.EventSubProcessConditionalStartEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.BoundarySignalEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.CaseTaskActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.NoneStartEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.EventSubProcessTimerStartEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.BoundaryTimerEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.EventSubProcessEventRegistryStartEventActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.behavior.ServiceTaskFutureJavaDelegateActivityBehavior",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.deployer.CachingAndArtifactsManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.deployer.TimerManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.deployer.ProcessDefinitionDiagramHelper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.deployer.ParsedDeployment",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.deployer.ParsedDeploymentBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.deployer.ParsedDeploymentBuilderFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.deployer.ResourceNameUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.deployer.EventSubscriptionManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.deployer.BpmnDeploymentHelper$ExpressionType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.deployer.BpmnDeployer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.deployer.BpmnDeploymentHelper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.DelegateExpressionTransactionDependentExecutionListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.ExecuteExecutionListenerTransactionListener$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.TransactionDependentTaskListenerExecutionScope",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.ScriptTaskListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.DelegateExpressionTaskListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.ExecuteTaskListenerTransactionListener$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.DelegateExpressionExecutionListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.ExpressionTaskListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.ExpressionCustomPropertiesResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.DelegateExpressionTransactionDependentTaskListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.ExecuteTaskListenerTransactionListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.DelegateExpressionCustomPropertiesResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.TransactionDependentExecutionListenerExecutionScope",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.ListenerNotificationHelper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.ExpressionExecutionListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.ScriptExecutionListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.listener.ExecuteExecutionListenerTransactionListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.diagram.ProcessDiagramLayoutFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.diagram.Bpmn20NamespaceContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.SubProcessParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.EventSubProcessParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.CancelEventDefinitionParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.CaseServiceTaskParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.AdhocSubProcessParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.BusinessRuleParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.ExternalWorkerServiceTaskParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.AbstractActivityBpmnParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.SequenceFlowParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.TransactionParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.ErrorEventDefinitionParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.IntermediateCatchEventParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.ProcessParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.BoundaryEventParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.TimerEventDefinitionParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.TaskParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.MessageEventDefinitionParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.StartEventParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.AbstractFlowNodeBpmnParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.ParallelGatewayParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.ServiceTaskParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.AbstractBpmnParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.SignalEventDefinitionParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.SendEventServiceTaskParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.CallActivityParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.CompensateEventDefinitionParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.EndEventParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.EventBasedGatewayParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.IntermediateThrowEventParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.InclusiveGatewayParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.UserTaskParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.SendTaskParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.EscalationEventDefinitionParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.ManualTaskParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.ReceiveTaskParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.ExclusiveGatewayParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.ConditionalEventDefinitionParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.handler.ScriptTaskParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.Error",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.BpmnParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.XMLImporter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.ErrorEventDefinition$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.ErrorEventDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.BpmnParse",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.CompensateEventDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.BpmnParseHandlers",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.FieldDeclaration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.SignalDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.factory.DefaultListenerFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.factory.XMLImporterFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.factory.DefaultActivityBehaviorFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.factory.AbstractBehaviorFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.factory.DefaultXMLImporterFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.factory.ListenerFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.factory.ActivityBehaviorFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.parser.EventSubscriptionDeclaration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.webservice.BpmnInterface",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.webservice.MessageImplicitDataInputAssociation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.webservice.BpmnInterfaceImplementation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.webservice.MessageImplicitDataOutputAssociation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.webservice.OperationImplementation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.webservice.Operation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.webservice.MessageInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.webservice.MessageDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.ItemInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.AbstractDataAssociation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.Assignment",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.Data",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.ClassStructureDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.DataRef",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.IOSpecification",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.StructureDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.ItemKind",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.SimpleStructureDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.SimpleDataInputAssociation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.FieldBaseStructureDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.StructureInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.FieldBaseStructureInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.TransformationDataOutputAssociation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.ItemDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.PrimitiveStructureInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.data.PrimitiveStructureDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.ScopeUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.ClassDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.DelegateExpressionUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.SkipExpressionUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.EscalationPropagation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.ScopeUtil$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.ClassDelegateCollectionHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.DelegateFlowableEventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.MessageThrowingEventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.ErrorThrowingEventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.ClassDelegateUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.SignalThrowingEventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.ClassDelegateFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.AbstractClassDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.BaseDelegateEventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.DelegateExpressionFlowableEventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.DynamicPropertyUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.DelegateExpressionCollectionHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.ErrorPropagation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.bpmn.helper.DefaultClassDelegateFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.CountingExecutionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.AbstractBpmnEngineVariableScopeEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ExecutionEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricFormPropertyEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ModelEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ActivityInstanceEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricActivityInstanceEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ExecutionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricProcessInstanceEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricProcessInstanceEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ExecutionEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.DeploymentEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricProcessInstanceEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ProcessDefinitionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricDetailEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ResourceEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.AttachmentEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.EventLogEntryEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricFormPropertyEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricDetailAssignmentEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.CommentEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ProcessDefinitionInfoEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.EventLogEntryEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.CommentEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricDetailEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ActivityInstanceEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricDetailEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricScopeInstanceEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.CommentEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricDetailEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ProcessDefinitionEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ActivityInstanceEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ProcessDefinitionInfoEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ProcessDefinitionInfoEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.BpmnEngineEntityConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ProcessDefinitionInfoEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.AbstractBpmnEngineNoRevisionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ExecutionEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ActivityInstanceEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ResourceEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricDetailAssignmentEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.EventLogEntryEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ProcessDefinitionEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ModelEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.AbstractBpmnEngineEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ResourceEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricActivityInstanceEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.AbstractProcessEngineEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricProcessInstanceEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.EventLogEntryEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.AbstractEntityNoRevision",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.SuspensionStateUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.DeploymentEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricDetailVariableInstanceUpdateEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.AttachmentEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.AbstractProcessDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.MybatisProcessDefinitionDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.ActivityByProcessInstanceIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.util.ExecutionTreeStringBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.MybatisDeploymentDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.MybatisModelDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.MybatisResourceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.MybatisExecutionDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.MybatisAttachmentDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.MybatisHistoricDetailDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.MybatisProcessDefinitionInfoDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.MybatisActivityInstanceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.MybatisHistoricActivityInstanceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.MybatisCommentDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.MybatisHistoricProcessInstanceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.ActivityInstanceMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.ExecutionsWithSameRootProcessInstanceIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.UnfinishedHistoricActivityInstanceMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.UnfinishedHistoricActivityInstanceByProcessInstanceIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.InactiveExecutionsInActivityAndProcInstMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.ExecutionsByProcessInstanceIdEntityMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.UnfinishedActivityInstanceMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.ProcessInstancesByProcessDefinitionMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.ExecutionsByParentExecutionIdEntityMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.InactiveExecutionsInActivityMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.InactiveExecutionsByProcInstMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.ExecutionByProcessInstanceMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.SubProcessInstanceExecutionBySuperExecutionIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.HistoricActivityInstanceMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.ExecutionsByRootProcessInstanceMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.cachematcher.ExecutionsByParentExecutionIdAndActivityIdEntityMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.impl.MybatisEventLogEntryDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.ProcessDefinitionInfoDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.CommentDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.HistoricDetailDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.HistoricActivityInstanceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.ActivityInstanceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.ResourceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.EventLogEntryDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.ExecutionDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.HistoricProcessInstanceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.ModelDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.AttachmentDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.ProcessDefinitionDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.data.DeploymentDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.AttachmentEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.DeploymentEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ModelEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ProcessDefinitionEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricScopeInstanceEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.CommentEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ModelEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricActivityInstanceEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricActivityInstanceEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.DeploymentEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.AttachmentEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.ResourceEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.entity.HistoricDetailVariableInstanceUpdateEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.deploy.ProcessDefinitionInfoCache$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.deploy.DeploymentManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.deploy.ProcessDefinitionInfoCacheObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.deploy.ProcessDefinitionInfoCache$2",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.deploy.ProcessDefinitionInfoCache",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.deploy.ProcessDefinitionCacheEntry",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.persistence.AbstractManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ProcessInstanceHistoryLogImpl$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.AbstractHistoryManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.CompositeHistoryManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.HistoryJsonConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.AsyncHistoryManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.AbstractAsyncHistoryManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.HistoricUserTaskLogRecordJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.IdentityLinkDeletedHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.AbstractHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.UpdateProcessDefinitionCascadeHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.VariableRemovedHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.TaskCreatedHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.ActivityEndHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.EntityLinkDeletedHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.VariableCreatedHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.HistoricUserTaskLogDeleteJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.SubProcessInstanceStartHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.ProcessInstanceDeleteHistoryByProcessDefinitionIdJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.TaskPropertyChangedHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.AbstractNeedsUnfinishedHistoricActivityHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.VariableUpdatedHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.TaskAssigneeChangedHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.ProcessInstanceDeleteHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.SetProcessDefinitionHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.EntityLinkCreatedHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.ActivityFullHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.TaskEndedHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.ProcessInstancePropertyChangedHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.FormPropertiesSubmittedHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.ActivityStartHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.ProcessInstanceEndHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.IdentityLinkCreatedHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.AbstractNeedsHistoricActivityHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.AbstractProcessInstanceDeleteHistoryTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.AbstractNeedsProcessInstanceHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.HistoricDetailVariableUpdateHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.AbstractNeedsTaskHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.TaskOwnerChangedHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.ProcessInstanceStartHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.async.json.transformer.ActivityUpdateHistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.DefaultHistoryManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.DefaultHistoryTaskManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.DefaultHistoryVariableManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.history.HistoryManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.DeploymentQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.rules.RulesHelper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.rules.RulesDeployer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.db.upgrade.DbUpgradeStep52To53InsertPropertyHistoryLevel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.db.DbSchemaDrop",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.db.DbSchemaCreate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.db.DbSchemaDrop$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.db.DbIdGenerator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.db.EntityDependencyOrder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.db.DbSchemaUpdate$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.db.ProcessDbSchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.db.EntityToTableMap",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.db.DbSchemaExport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.db.DbSchemaUpdate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.AgendaSessionFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.DebugFlowableEngineAgendaFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.DebugFlowableEngineAgenda",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.EvaluateConditionalEventsOperation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.TakeOutgoingSequenceFlowsOperation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.AbstractOperation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.DefaultFlowableEngineAgendaFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.ContinueProcessOperation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.EndExecutionOperation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.DebugContinueProcessOperation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.DefaultFlowableEngineAgenda",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.DestroyScopeOperation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.ContinueMultiInstanceOperation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.TriggerExecutionOperation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.agenda.ExecuteInactiveBehaviorsOperation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ActivityInstanceQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ExecutionQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ProcessMigrationServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.FormServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ProcessDefinitionQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.DefaultProcessJobParentStateResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.migration.ProcessInstanceMigrationDocumentImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.migration.ProcessInstanceMigrationDocumentBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.migration.ProcessInstanceMigrationBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.migration.ProcessInstanceMigrationManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.AbstractEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.ActivityMessageEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.ActivityErrorReceivedEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.VariableEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.Fields",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.ActivityCompletedEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.ProcessInstanceEndedEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.EngineClosedEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.VariableDeletedEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.SequenceFlowTakenEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.TaskCompletedEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.TaskCreatedEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.VariableCreatedEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.AbstractDatabaseEventLoggerEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.AbstractTaskEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.ActivityCompensatedEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.ActivitySignaledEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.EngineCreatedEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.ProcessInstanceStartedEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.ActivityStartedEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.EventLoggerEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.TaskAssignedEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.handler.VariableUpdatedEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.EventLogger",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.EventLoggerListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.DatabaseEventFlusher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.EventLogger$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.AbstractEventFlusher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.logger.EventFlusher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.BreakpointJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.SignalEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.EventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.EventDefinitionExpressionUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.CompensationEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.event.MessageEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.NativeProcessInstanceQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.interceptor.LoggingExecutionTreeCommandInvoker",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.interceptor.DelegateInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.interceptor.CommandInvoker",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.interceptor.CommandInvoker$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.interceptor.DefaultIdentityLinkInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.interceptor.BpmnOverrideContextInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ProcessInstanceHistoryLogImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.IdentityServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.NativeExecutionQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.IdentityLinkQueryObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.DataObjectImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.AsyncSendEventJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.ProcessInstanceMigrationJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.TimerActivateProcessDefinitionHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.AcquiredJobs",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.TimerStartEventJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.ProcessInstanceMigrationStatusJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.ProcessEventJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.AbstractProcessInstanceMigrationJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.TriggerTimerEventJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.AsyncContinuationJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.TimerChangeProcessDefinitionSuspensionStateJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.AsyncTriggerJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.DefaultFailedJobCommandFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.ExternalWorkerTaskCompleteJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.ParallelMultiInstanceActivityCompletionJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.BpmnHistoryCleanupJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.AsyncCompleteCallActivityJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.TimerSuspendProcessDefinitionHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.TimerDeclarationType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.jobexecutor.TimerEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.impl.ExecutionQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.IdentityService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.HistoryCleaningManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.DeploymentMergeStrategy",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.Deployment",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.ProcessDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.NativeModelQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.MergeMode",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.Model",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.NativeDeploymentQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.DiagramLayout",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.DiagramNode",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.ProcessDefinitionQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.DeploymentBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.DeploymentQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.ModelQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.DiagramEdgeWaypoint",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.DeploymentProperties",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.DiagramEdge",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.DiagramElement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.NativeProcessDefinitionQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.repository.InternalProcessDefinitionLocalizationManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.form.FormProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.form.AbstractFormType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.form.FormData",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.form.StartFormData",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.form.FormType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.form.TaskFormData",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.InternalProcessLocalizationManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.dynamic.PropertiesParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.dynamic.PropertiesParserConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.dynamic.ScriptTaskPropertiesParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.dynamic.DynamicProcessDefinitionSummary",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.dynamic.DefaultPropertiesParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.dynamic.BasePropertiesParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.dynamic.UserTaskPropertiesParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.dynamic.DynamicStateManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.app.AppModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.app.AppResourceConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.ProcessEngine",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.Agenda",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.parse.BpmnParseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.DynamicBpmnConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.FormService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.runtime.Execution",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.runtime.ActivityInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.runtime.ExecutionQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.runtime.ProcessInstanceBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.runtime.NativeActivityInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.runtime.DataObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.runtime.ChangeActivityStateBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.runtime.NativeProcessInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.runtime.ActivityInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.runtime.ProcessInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.runtime.ProcessInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.runtime.NativeExecutionQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.runtime.ProcessDebugger",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.runtime.ExternalWorkerCompletionBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.RepositoryService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.DefaultCandidateManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.FutureJavaDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.DelegateExecution",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.variable.VariableAggregator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.variable.VariableAggregatorContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.JavaDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.CustomPropertiesResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.ReadOnlyDelegateExecution",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.BaseExecutionListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.BpmnError",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.MapBasedFlowableFutureJavaDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.TaskListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.BusinessRuleTaskDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.ExecutionListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.DelegateHelper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.TransactionDependentTaskListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableEscalationEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableProcessCancelledEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableJobRescheduledEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.BpmnModelEventDispatchAction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableEntityEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableMultiInstanceActivityCompletedEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableConditionalEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableActivityCancelledEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableMultiInstanceActivityCancelledEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableMultiInstanceActivityEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableActivityEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableProcessEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableSignalEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableErrorEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableVariableEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableEventBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableProcessStartedEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableMessageEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableSequenceFlowTakenEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableEscalationEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableEntityExceptionEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableEntityWithVariablesEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.impl.FlowableProcessTerminatedEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableConditionalEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.AbstractFlowableEngineEventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableMessageEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableSignalEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.AbstractFlowableEngineEventListener$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableCancelledEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableMultiInstanceActivityEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.BaseEntityEventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableProcessEngineEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableEntityWithVariablesEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableActivityEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableMultiInstanceActivityCompletedEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableActivityCancelledEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableSequenceFlowTakenEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableErrorEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableJobRescheduledEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableMultiInstanceActivityCancelledEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableProcessTerminatedEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.event.FlowableProcessStartedEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.FlowableFutureJavaDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.delegate.TransactionDependentExecutionListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.DynamicBpmnService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.ProcessMigrationService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.ProcessEngines",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.cfg.AbstractProcessEngineConfigurator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.cfg.MailServerInfo",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.TaskService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.ManagementService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.RuntimeService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.DefaultHistoryCleaningManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.CandidateManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.FlowableTaskAlreadyClaimedException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.task.Event",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.task.Comment",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.task.Attachment",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.history.HistoricActivityInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.history.HistoricFormProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.history.DeleteReason",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.history.HistoricProcessInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.history.NativeHistoricActivityInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.history.HistoricDetail",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.history.HistoricDetailQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.history.ProcessInstanceHistoryLogQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.history.NativeHistoricDetailQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.history.ProcessInstanceHistoryLog",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.history.HistoricProcessInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.history.HistoricVariableUpdate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.history.HistoricActivityInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.history.NativeHistoricProcessInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.ProcessEngineConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.ProcessEngineConfiguration$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.DecisionTableVariableManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.HistoryService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceMigrationDocumentConverter$OneToManyMappingConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ActivityMigrationMapping$ManyToOneMapping",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceMigrationDocumentConverter$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceMigrationDocumentConverter$OneToManyMappingConverter$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ActivityMigrationMappingOptions$SingleToActivityOptions",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ActivityMigrationMapping$OneToManyMapping",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceBatchMigrationPartResult",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceMigrationDocumentConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceMigrationDocumentConverter$OneToOneMappingConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ActivityMigrationMapping$OneToOneMapping",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceMigrationDocumentBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceMigrationDocumentConverter$BaseActivityMigrationMappingConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceBatchMigrationResult",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.Script",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ActivityMigrationMappingOptions$MultipleToActivityOptions",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceMigrationDocumentConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceMigrationBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceMigrationDocumentConverter$ManyToOneMappingConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceMigrationValidationResult",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ActivityMigrationMappingOptions",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceMigrationDocument",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ActivityMigrationMapping",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceMigrationManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.migration.ProcessInstanceMigrationDocumentConverter$ManyToOneMappingConverter$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.FlowableEngineAgenda",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.event.EventLogEntry",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.AbstractStartProcessInstanceBeforeContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.CreateExternalWorkerJobBeforeContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.ExecutionQueryInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.StartProcessInstanceInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.CreateUserTaskAfterContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.CreateExternalWorkerJobInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.StartSubProcessInstanceBeforeContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.IdentityLinkInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.StartProcessInstanceAfterContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.ProcessInstanceQueryInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.MigrationContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.AbstractStartProcessInstanceAfterContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.StartProcessInstanceBeforeContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.HistoricProcessInstanceQueryInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.CreateExternalWorkerJobAfterContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.StartSubProcessInstanceAfterContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.CreateUserTaskBeforeContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.interceptor.CreateUserTaskInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.logging.LogMDC",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.FlowableEngineAgendaFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.debug.ExecutionTreeUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.debug.ExecutionTreeBfsIterator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.debug.ExecutionTree",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.debug.ExecutionTreeNode",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.engine.ProcessEngineLifecycleListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.InclusiveGatewayXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.UserTaskXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.SendTaskXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.UserTaskXMLConverter$PotentialOwnerParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.TextAnnotationXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.ManualTaskXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.DataStoreReferenceXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.ReceiveTaskXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.ExclusiveGatewayXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.util.CommaSplitter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.util.BpmnXMLUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.ScriptTaskXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.ParallelGatewayXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.ServiceTaskXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.BaseBpmnXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.BusinessRuleTaskXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.XMLStreamReaderUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.ComplexGatewayXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.SendEventServiceTaskXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.AssociationXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.CallActivityXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.EndEventXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.BpmnEdgeParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.PotentialStarterParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.LaneParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.BpmnShapeParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.ResourceParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.DataStoreParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.SignalParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.ExtensionElementsParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.ImportParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.ParticipantParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.InterfaceParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.DefinitionsParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.ProcessParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.MessageParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.MessageFlowParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.SubProcessParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.parser.ItemDefinitionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.EventGatewayXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.ThrowEventXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.ValuedDataObjectXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.alfresco.AlfrescoStartEventXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.alfresco.AlfrescoUserTaskXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.DelegatingXMLStreamWriter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.BoundaryEventXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.TaskXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.BpmnXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.StartEventXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.export.CollaborationExport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.export.ProcessExport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.export.MapExceptionExport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.export.DefinitionsRootExport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.export.SignalAndMessageDefinitionExport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.export.LaneExport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.export.FailedJobRetryCountExport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.export.BPMNDIExport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.export.DataStoreExport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.export.MultiInstanceExport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.export.EscalationDefinitionExport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.export.FieldExtensionExport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.export.FlowableListenerExport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.CaseServiceTaskXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.UserTaskXMLConverter$CustomIdentityLinkParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.ExternalWorkerServiceTaskXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.EventOutParameterParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.TimerEventDefinitionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.TimeDurationParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.FlowNodeRefParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.DataStateParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.DataInputAssociationParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.TextAnnotationTextParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.TimeCycleParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.FlowableMapExceptionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.ErrorEventDefinitionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.FlowableListenerParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.MessageEventDefinitionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.DataOutputAssociationParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.FieldExtensionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.MultiInstanceParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.FormPropertyParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.FlowableFailedjobRetryParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.CancelEventDefinitionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.ConditionalEventDefinitionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.VariableAggregationDefinitionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.BaseChildElementParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.TerminateEventDefinitionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.InParameterParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.TaskListenerParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.TimeDateParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.SignalEventDefinitionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.ConditionExpressionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.FlowableEventListenerParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.ConditionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.FlowableCollectionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.CompensateEventDefinitionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.DataAssociationParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.ScriptTextParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.IOSpecificationParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.EventInParameterParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.EscalationEventDefinitionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.OutParameterParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.ExecutionListenerParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.child.DocumentationParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.IndentingXMLStreamWriter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.UserTaskXMLConverter$HumanPerformerParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.SequenceFlowXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.HttpServiceTaskXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.converter.CatchEventXMLConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.constants.BpmnXMLConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.exceptions.XMLException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.TimerEventDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.FlowElement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.TerminateEventDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ExclusiveGateway",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ComplexDataType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.CollectionHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.DataStoreReference",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Assignment",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ValuedDataObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.HttpServiceTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.FieldExtension",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ParallelGateway",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Event",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.MultiInstanceLoopCharacteristics",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ExternalWorkerServiceTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.DataAssociation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Process",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.TaskWithFieldExtensions",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.BusinessRuleTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.EventGateway",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Gateway",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ErrorEventDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.MessageEventDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.SubProcess",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.EventDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.FormProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Escalation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.IOSpecification",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Message",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.VariableAggregationDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.EndEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.FormValue",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.parse.Problem",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.parse.Warning",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ScriptTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.IOParameter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.StringDataObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Association",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.SignalEventDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Resource",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.FlowNode",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.BpmnModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ExtensionElement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.CancelEventDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ReceiveTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.CustomProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.DataObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.AssociationModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Lane",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.alfresco.AlfrescoMailTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.alfresco.AlfrescoUserTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.alfresco.AlfrescoScriptTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.alfresco.AlfrescoStartEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ServiceTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.UserTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Pool",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.AssociationDirection",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.DoubleDataObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.LongDataObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.CaseServiceTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.MapExceptionEntry",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.VariableAggregationDefinition$Variable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.TextAnnotation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.DataSpec",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.DataStore",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.DataGrid",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Transaction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ComplexGateway",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Interface",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.CompensateEventDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.SendTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.MessageFlow",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.JsonDataObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.HasExtensionAttributes",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ExtensionAttribute",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.EscalationEventDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Task",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.IntegerDataObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.BaseElement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Signal",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.DateDataObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.CallActivity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.VariableAggregationDefinitions",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.InclusiveGateway",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.EventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.BoundaryEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.EventSubProcess",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.GraphicInfo",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.FlowableHttpResponseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.StartEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Import",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Activity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.SequenceFlow",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Artifact",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.Operation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.DataGridRow",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.DataGridField",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.BooleanDataObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ConditionalEventDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ImplementationType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.FlowElementsContainer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ManualTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ItemDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.IntermediateCatchEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.HasExecutionListeners",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.SendEventServiceTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.ThrowEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.FlowableListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.bpmn.model.AdhocSubProcess",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.IntermediateThrowEventValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.ExecutionListenerValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.ScriptTaskValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.ErrorValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.AssociationValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.FlowElementValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.SendTaskValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.StartEventValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.EventGatewayValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.SequenceflowValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.IntermediateCatchEventValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.ExclusiveGatewayValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.UserTaskValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.FlowableEventListenerValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.DiagramInterchangeInfoValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.SubprocessValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.BpmnModelValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.OperationValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.DataObjectValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.SignalValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.MessageValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.EventValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.BoundaryEventValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.EndEventValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.EventSubprocessValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.ServiceTaskValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.impl.ExternalInvocationTaskValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.Constraints",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.ValidatorSetFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.Validator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.ValidatorSet",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.ValidatorImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.ValidatorSetNames",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.ProcessLevelValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.validator.Problems",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.ProcessValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.ProcessValidatorImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.ValidationError",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.validation.ProcessValidatorFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$19",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$24",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramCanvas$SHAPE_TYPE",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$26",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$22",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$9",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$20",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$27",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$25",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$18",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$21",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$23",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$8",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$4",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$ActivityDrawInstruction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$12",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$10",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$6",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$2",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$14",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$16",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$11",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$7",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$5",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramCanvas",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$13",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$17",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$ArtifactDrawInstruction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$3",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$28",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.impl.DefaultProcessDiagramGenerator$15",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.util.ReflectUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.ProcessDiagramGenerator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.image.exception.FlowableImageException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.repository.EngineDeployment",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.repository.EngineResource",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.Engine",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.identity.AuthenticationContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.variable.VariableContainer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.FlowableForbiddenException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.async.AsyncTaskInvoker",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.async.AsyncTaskExecutor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.io.InputStreamProvider",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.management.TableMetaData",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.management.TablePage",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.management.TablePageQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.delegate.Expression",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.delegate.FlowableFunctionDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.delegate.event.FlowableEventDispatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.delegate.event.FlowableEngineEventType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.delegate.event.AbstractFlowableEventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.delegate.event.FlowableEngineEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.delegate.event.FlowableEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.delegate.event.FlowableEventType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.delegate.event.FlowableEntityEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.delegate.event.FlowableEventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.delegate.event.FlowableEngineEntityEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.delegate.event.FlowableExceptionEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.scope.ScopeTypes",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.FlowableClassLoadingException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.FlowableOptimisticLockingException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.constant.ReferenceTypes",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.FlowableIllegalArgumentException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.FlowableTaskAlreadyClaimedException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.FlowableObjectNotFoundException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.FlowableException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.history.HistoricData",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.FlowableIllegalStateException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.query.DeleteQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.query.Query",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.query.NativeQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.query.CacheAwareQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.query.Query$NullHandlingOnOrder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.query.QueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.engine.EngineLifecycleListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.api.FlowableWrongDbException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.HasVariableTypes",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cmd.GetTableMetaDataCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cmd.GetTableCountCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cmd.CustomSqlExecution",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cmd.LockCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cmd.GetLockValueCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cmd.ReleaseLockCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cmd.GetPropertiesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.transaction.TransactionContextHolder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.AbstractEngineConfigurator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.AbstractEngineConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.BusinessCalendar",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.AdvancedSchedulerResolverWithoutTimeZone",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.CycleBusinessCalendar",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.DurationBusinessCalendar",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.DueDateBusinessCalendar",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.ValueSet",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.BusinessCalendarImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.CronExpression",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.AdvancedSchedulerResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.AdvancedCycleBusinessCalendar",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.MapBusinessCalendarManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.BusinessCalendarManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.DurationHelper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.AdvancedSchedulerResolverWithTimeZone",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.calendar.DefaultBusinessCalendar",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.context.Context",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.scripting.ScriptBindings",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.scripting.Resolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.scripting.BeansResolverFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.scripting.ScriptingEngines",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.scripting.ResolverFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.scripting.ScriptBindingsFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.identity.UserIdAuthenticationContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.identity.Authentication",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.identity.UserIdPrincipal",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.FlowableVersions",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.util.ReflectUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.util.ExceptionUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.util.io.UrlStreamSource",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.util.io.StreamSource",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.util.io.InputStreamSource",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.util.io.BytesStreamSource",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.util.io.StringStreamSource",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.util.DefaultClockImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.util.CollectionUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.util.IoUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.util.TimeZoneUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.AbstractEngineConfigurator$2",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.EngineDeployer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.JsonNodeELResolver$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.FlowableExpressionFactory$FlowableExpressionBuilder$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.JuelExpression",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.FixedValue",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.FlowableExpressionFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.ExpressionFactoryResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.AbstractFlowableFunctionDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.FlowableExpressionFactory$FlowableExpressionParserImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.FlowableFunctionMapper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.ParsingElContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.AbstractVariableComparatorExpressionFunction$OPERATOR",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.AbstractFlowableVariableExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.AbstractVariableComparatorExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.VariableEqualsExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.VariableExistsExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.VariableGreaterThanExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.VariableIsNotEmptyExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.VariableGreaterThanOrEqualsExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.VariableGetOrDefaultExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.VariableContainsExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.VariableBase64ExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.VariableIsEmptyExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.VariableLowerThanExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.VariableLowerThanOrEqualsExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.VariableGetExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.VariableNotEqualsExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.function.VariableContainsAnyExpressionFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.VariableContainerELResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.FlowableExpressionParser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.DefaultExpressionManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.VariableContainerWrapper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.FlowableElContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.ReadOnlyMapELResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.EvaluationState",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.FlowableExpressionFactory$FlowableExpressionBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.DynamicBeanPropertyELResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.FlowableAstFunctionCreator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.JsonNodeELResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.el.ExpressionManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.async.DefaultAsyncTaskInvoker",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.async.DefaultAsyncTaskExecutor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.runtime.Clock",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.runtime.ClockReader",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.lock.LockManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.lock.LockManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.AbstractServiceConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.AbstractEngineConfiguration$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.AbstractEngineConfigurator$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.TransactionContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.IdGenerator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.multitenant.TenantInfoHolder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.multitenant.TenantAwareDataSource",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.jta.JtaTransactionContextFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.standalone.StandaloneMybatisTransactionContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.standalone.StandaloneMybatisTransactionContextFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.standalone.StandaloneMybatisTransactionContext$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.TransactionState",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.mail.MailServerInfo",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.TransactionListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.TransactionContextFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.TransactionPropagation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.CommandExecutorImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.SpringBeanFactoryProxyMap",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.cfg.BeansConfigurationHelper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.MapELResolver$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.Util$MethodWrapper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.ListELResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.ExpressionFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.ELContextEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.FunctionMapper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.Util$Wrapper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.ArrayELResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.PropertyNotFoundException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.Expression",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.CompositeELResolver$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.ELResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.VariableMapper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.CompositeELResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.MethodInfo",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.ResourceBundleELResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.BeanELResolver$BeanProperties",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.ELContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.BeanELResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.MapELResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.ValueExpression",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.PropertyNotWritableException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.Util",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.BeanELResolver$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.CouldNotResolvePropertyELResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.MethodNotFoundException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.Util$CandidatesType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.MethodExpression",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.ResourceBundleELResolver$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.Util$ConstructorWrapper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.JreCompat",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.ValueReference",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.Jre9Compat",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.ELContextListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.Util$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.ELException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.javax.el.BeanELResolver$BeanProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.FlowableVersion",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.cache.CachedEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.cache.EntityCacheImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.cache.CachedEntityMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.cache.EntityCache",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.cache.CachedEntityMatcherAdapter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.AlwaysUpdatedPersistentObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.PropertyEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.AbstractEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.ByteArrayEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.AbstractEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.Entity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.ByteArrayEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.PropertyEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.TableDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.ByteArrayRefTypeHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.PropertyEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.ByteArrayEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.AbstractEngineEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.EntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.TablePageQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.ByteArrayEntityImpl$PersistentState",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.AbstractEntityNoRevision",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.TableDataManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.ByteArrayEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.data.impl.MybatisByteArrayDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.data.impl.MybatisPropertyDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.data.DataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.data.PropertyDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.data.ByteArrayDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.AbstractServiceEngineEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.PropertyEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.entity.ByteArrayRef",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.deploy.DeploymentCache",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.deploy.DefaultDeploymentCache",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.deploy.FullDeploymentCache",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.deploy.DefaultDeploymentCache$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.GenericManagerFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.persistence.StrongUuidGenerator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.history.HistoryLevel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.EngineConfigurator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.BulkDeleteOperation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.ListQueryParameterObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.SuspensionState$SuspensionStateImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.ListQueryParameterObject$ResultType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.LiquibaseDatabaseConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.SuspensionState",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.SingleCachedEntityMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.AbstractDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.AbstractSqlScriptBasedDbSchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.HasRevision",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.SchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.ServiceSqlScriptBasedDbSchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.MybatisTypeHandlerConfigurator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.DbSqlSessionFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.EngineDatabaseConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.DbUpgradeStep",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.CommonDbSchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.MybatisTypeAliasConfigurator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.LiquibaseBasedSchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.DbSqlSession",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.IdBlock",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.db.LogSqlExecutionTimePlugin",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.ExpressionFactoryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.misc.BooleanOperations",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.misc.TypeConverterImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.misc.TypeConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.misc.LocalMessages",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.misc.NumberOperations",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Parser$ExtensionPoint",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Builder$Feature",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Parser$ExtensionHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Scanner$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Builder$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Builder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Scanner$Token",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Scanner$ExtensionToken",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Parser$ParseException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstUnary$3",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$11",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstFunction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$7",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstIdentifier",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$5",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$13",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstUnary",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstComposite",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstUnary$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBracket",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstEval",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstChoice",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$3",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$4",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$12",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstMethod",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBoolean",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstUnary$2",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$10",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$6",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstLiteral",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$2",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstUnary$Operator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstString",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstRightValue",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstNode",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstDot",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstText",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstNested",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstIdentifier$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstUnary$SimpleOperator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstNumber",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$8",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstNull",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$Operator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstParameters",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$9",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.ast.AstBinary$SimpleOperator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Cache",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Scanner",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Parser",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Parser$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Parser$LookaheadToken",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Scanner$Symbol",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.impl.Scanner$ScanException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.NodePrinter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.Bindings",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.Bindings$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.TreeCache",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.TreeStore",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.FunctionNode",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.TreeBuilderException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.TreeBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.Tree",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.Bindings$MethodWrapper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.IdentifierNode",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.Node",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.tree.ExpressionNode",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.util.RootPropertyResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.util.SimpleResolver$2",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.util.SimpleContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.util.SimpleContext$Functions",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.util.SimpleResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.util.SimpleResolver$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.util.SimpleContext$Variables",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.TreeValueExpression",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.ExpressionFactoryImpl$Profile",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.ObjectValueExpression",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.TreeMethodExpression",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.agenda.Agenda",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.agenda.WaitForAnyFutureToFinishOperation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.agenda.AbstractAgenda",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.agenda.AgendaOperationRunner",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.agenda.ExecuteFutureActionOperation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.EngineInfo",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.callback.RuntimeInstanceStateChangeCallback",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.callback.CallbackData",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.service.CommonServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.service.CommonEngineServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.query.AbstractNativeQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.query.AbstractQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.query.BaseNativeQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.query.BaseNativeQuery$ResultType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.HasVariableServiceConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.event.FlowableEntityEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.event.FlowableEventDispatcherImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.event.FlowableEngineEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.event.EventDispatchAction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.event.FlowableEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.event.FlowableEventSupport",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.event.ExecuteEventListenerTransactionListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.event.FlowableEntityExceptionEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.Direction",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.EngineConfigurationConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.CommandContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.CommandExecutor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.DefaultCommandInvoker",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.Session",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.SessionFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.AbstractCommandInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.LogInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.CommandContextCloseListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.JtaTransactionInterceptor$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.Command",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.CommandContextFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.JtaTransactionInterceptor$TransactionException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.TransactionCommandContextCloseListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.CommandContextInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.RetryInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.TransactionContextInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.CommandInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.CommandConfig",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.interceptor.CrDbRetryInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.logging.LoggingSession",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.logging.LoggingSessionFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.logging.LoggingListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.logging.LoggingSessionLoggerOutput",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.logging.CmmnLoggingSessionConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.logging.LoggingSessionCommandContextCloseListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.logging.LoggingSessionConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.ScriptingEngineAwareEngineConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.DefaultTenantProvider",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.Page",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.common.engine.impl.HasExpressionManagerEngineConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.api.types.VariableTypes",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.api.types.VariableType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.api.types.ValueFields",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.api.delegate.VariableScope",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.api.persistence.entity.VariableInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.api.history.HistoricVariableInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.api.history.NativeHistoricVariableInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.api.history.HistoricVariableInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.api.event.FlowableVariableEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.OutboundEventProcessingPipeline",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventDeploymentBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.OutboundEventChannelAdapter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.CorrelationKeyGenerator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventRepositoryService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.OutboundEventProcessor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.InboundEventTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventDeploymentQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.ChannelModelProcessor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.InboundEventPayloadExtractor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventRegistry",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.runtime.EventInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.runtime.EventPayloadInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.management.EventRegistryChangeDetectionExecutor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.management.EventRegistryChangeDetectionManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.InboundEventTenantDetector",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.InboundEventProcessor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventDefinitionQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventRegistryEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.OutboundChannelModelBuilder$OutboundEventProcessingPipelineBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder$InboundEventTenantJsonDetectorBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder$InboundEventTenantXmlDetectorBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.OutboundChannelModelBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder$InboundJmsChannelBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder$InboundEventPayloadExtractorBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder$InboundEventTenantDetectorBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.OutboundChannelModelBuilder$OutboundJmsChannelBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder$InboundEventKeyJsonDetectorBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.OutboundChannelModelBuilder$OutboundRabbitChannelBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.OutboundChannelModelBuilder$OutboundKafkaChannelBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder$InboundEventPayloadXmlExtractorBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder$InboundEventProcessingPipelineBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder$InboundEventKeyDetectorBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.EventPayloadTypes",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder$InboundKafkaChannelBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder$InboundEventTransformerBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder$InboundEventKeyXmlDetectorBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder$InboundEventPayloadJsonExtractorBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.InboundChannelModelBuilder$InboundRabbitChannelBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.model.EventModelBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventRegistryEventConsumer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.InboundEventProcessingPipeline",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.InboundEventDeserializer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.InboundEventKeyDetector",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.InboundEventChannelAdapter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.ChannelDefinitionQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventDeployment",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventRegistryConfigurationApi",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.ChannelDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.OutboundEventSerializer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventManagementService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.HistoricVariableService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.HistoricJPAEntityVariableType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.EntityManagerSessionFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.StringType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.UUIDType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.MutableVariableType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.NullType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.JPAEntityMappings",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.JodaDateType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.InstantType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.JPAEntityListVariableType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.SerializableType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.IntegerType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.LocalDateTimeType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.ShortType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.SerializableType$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.JPAEntityVariableType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.ByteArrayType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.CacheableVariable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.LongType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.JodaDateTimeType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.LocalDateType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.DefaultVariableTypes",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.EntityManagerSession",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.HistoricJPAEntityListVariableType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.EntityManagerSessionImpl$2",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.LongStringType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.JsonType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.DoubleType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.EntityMetaData",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.TraceableVariablesCommandContextCloseListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.TraceableObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.BooleanType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.DateType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.EntityManagerSessionImpl$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.types.JPAEntityScanner",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.VariableServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.util.VariableLoggingSessionUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.util.CommandContextUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.HistoricVariableInstanceQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.el.VariableScopeExpressionManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.el.NoExecutionVariableScope",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.QueryVariableValue",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.NativeHistoricVariableInstanceQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.QueryOperator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.AbstractVariableQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.HistoricVariableInstanceEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.HistoricVariableInstanceEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.VariableInitializingList",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.VariableInstanceEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.HistoricVariableInitializingList",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.HistoricVariableInstanceEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.HistoricVariableInstanceEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.VariableInstanceEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.TransientVariableInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.VariableInstanceEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.VariableScopeImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.data.impl.MybatisHistoricVariableInstanceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.data.impl.MybatisVariableInstanceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.data.impl.cachematcher.HistoricVariableInstanceBySubScopeIdAndScopeTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.data.impl.cachematcher.VariableInstanceBySubScopeIdAndScopeTypesMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.data.impl.cachematcher.HistoricVariableInstanceByTaskIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.data.impl.cachematcher.HistoricVariableInstanceByProcInstMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.data.impl.cachematcher.VariableInstanceByTaskIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.data.impl.cachematcher.VariableInstanceByScopeIdAndScopeTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.data.impl.cachematcher.VariableInstanceByExecutionIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.data.impl.cachematcher.VariableInstanceByScopeIdAndScopeTypesMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.data.impl.cachematcher.HistoricVariableInstanceByScopeIdAndScopeTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.data.VariableInstanceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.data.HistoricVariableInstanceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.AbstractVariableServiceEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.VariableServiceEntityConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.entity.VariableInstanceEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.persistence.AbstractManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.HistoricVariableServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.db.IbatisVariableTypeHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.db.VariableDbSchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.InternalVariableInstanceQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.HistoricVariableInstanceQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.impl.AbstractVariableQueryImpl$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.InternalVariableInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.history.InternalHistoryVariableManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.VariableServiceConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.event.impl.FlowableVariableEventBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.event.impl.FlowableVariableEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.variable.service.VariableService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.IdentityLinkServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.util.CommandContextUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.HistoricIdentityLinkServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.IdentityLinkEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.IdentityLinkEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.IdentityLinkServiceEntityConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.IdentityLinkEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.HistoricIdentityLinkEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.AbstractIdentityLinkServiceNoRevisionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.HistoricIdentityLinkEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.IdentityLinkEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.HistoricIdentityLinkEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.HistoricIdentityLinkEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.data.impl.MybatisHistoricIdentityLinkDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.data.impl.MybatisIdentityLinkDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.data.impl.cachematcher.HistoricIdentityLinksByScopeIdAndTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.data.impl.cachematcher.IdentityLinksByScopeIdScopeTypeUserGroupAndTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.data.impl.cachematcher.IdentityLinksByScopeIdAndTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.data.impl.cachematcher.HistoricIdentityLinksBySubScopeIdAndTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.data.impl.cachematcher.HistoricIdentityLinksByProcInstMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.data.impl.cachematcher.IdentityLinksByProcessInstanceUserGroupAndTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.data.impl.cachematcher.IdentityLinksByProcessInstanceMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.data.impl.cachematcher.IdentityLinksByTaskIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.data.impl.cachematcher.IdentityLinksBySubScopeIdAndTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.data.IdentityLinkDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.entity.data.HistoricIdentityLinkDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.persistence.AbstractManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.impl.db.IdentityLinkDbSchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.IdentityLinkService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.IdentityLinkType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.IdentityLinkEventHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.HistoricIdentityLinkService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.IdentityLinkServiceConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.service.event.impl.FlowableIdentityLinkEventBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.api.IdentityLink",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.api.IdentityLinkInfo",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.api.IdentityLinkType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.identitylink.api.history.HistoricIdentityLink",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.EntityLinkServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.util.CommandContextUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.HistoricEntityLinkServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.HistoricEntityLinkEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.HistoricEntityLinkEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.HistoricEntityLinkEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.EntityLinkEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.AbstractEntityLinkServiceNoRevisionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.EntityLinkServiceEntityConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.EntityLinkEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.HistoricEntityLinkEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.data.impl.MybatisHistoricEntityLinkDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.data.impl.cachematcher.HistoricEntityLinksByScopeIdAndTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.data.impl.cachematcher.EntityLinksWithSameRootScopeForScopeIdAndScopeTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.data.impl.cachematcher.EntityLinksByRootScopeIdAndTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.data.impl.cachematcher.EntityLinksByScopeIdAndTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.data.impl.cachematcher.EntityLinksByReferenceScopeIdAndTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.data.impl.MybatisEntityLinkDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.data.EntityLinkDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.data.HistoricEntityLinkDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.EntityLinkEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.entity.EntityLinkEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.persistence.AbstractManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.impl.db.EntityLinkDbSchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.service.EntityLinkServiceConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.api.HierarchyType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.api.EntityLinkType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.api.EntityLinkInfo",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.api.EntityLinkService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.api.history.HistoricEntityLinkService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.api.history.HistoricEntityLink",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.entitylink.api.EntityLink",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.GetDeploymentResourceNamesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.GetChannelModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.SetDeploymentParentDeploymentIdCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.GetTableNamesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.SetDeploymentTenantIdCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.GetChannelDefinitionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.GetDeploymentResourceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.GetEventDefinitionCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.SetChannelDefinitionCategoryCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.DeployCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.SetDeploymentCategoryCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.GetEventModelCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.SetEventDefinitionCategoryCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.GetEventDefinitionResourceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.GetChannelDefinitionResourceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.DeleteDeploymentCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cmd.SchemaOperationsEventRegistryEngineBuild",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.pipeline.DefaultOutboundEventProcessingPipeline",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.pipeline.InMemoryOutboundEventProcessingPipeline",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.pipeline.InMemoryOutboundEventChannelAdapter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.pipeline.DelegateExpressionInboundChannelModelProcessor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.pipeline.InboundChannelModelProcessor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.pipeline.DelegateExpressionOutboundChannelModelProcessor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.pipeline.OutboundChannelModelProcessor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.pipeline.DefaultInboundEventProcessingPipeline",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.deployer.ChannelDefinitionDeploymentHelper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.deployer.EventDefinitionDeploymentHelper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.deployer.CachingAndArtifactsManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.deployer.ParsedDeployment",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.deployer.ParsedDeploymentBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.deployer.ParsedDeploymentBuilderFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.deployer.EventDefinitionDeployer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.DefaultInboundEventProcessor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.EventRegistryEngines",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.repository.EventDeploymentBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.EventRepositoryServiceImpl$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.util.CommandContextUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.transformer.DefaultInboundEventTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.serialization.EventPayloadToJsonStringSerializer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.serialization.StringToJsonDeserializer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.serialization.StringToXmlDocumentDeserializer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.serialization.EventPayloadToXmlStringSerializer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.EventRepositoryServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.EventRegistryEngineImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.io.ResourceStreamSource",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.runtime.EventInstanceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.runtime.EventPayloadInstanceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.payload.JsonFieldToMapPayloadExtractor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.payload.XmlElementsToMapPayloadExtractor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.management.DefaultEventRegistryChangeDetectionManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.management.EventRegistryChangeDetectionRunnable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.management.DefaultEventRegistryChangeDetectionExecutor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.SystemOutboundEventProcessor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.EventDefinitionQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.keydetector.InboundEventStaticKeyDetector",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.keydetector.JsonFieldBasedInboundEventKeyDetector",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.keydetector.XpathBasedInboundEventKeyDetector",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.keydetector.JsonPointerBasedInboundEventKeyDetector",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.parser.ChannelDefinitionParse",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.parser.EventDefinitionParse",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.parser.EventDefinitionParseFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.parser.ChannelDefinitionParseFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.ChannelDefinitionQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cfg.StandaloneInMemEventRegistryEngineConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.cfg.StandaloneEventRegistryEngineConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.EventRegistryEngine",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.DefaultOutboundEventProcessor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.constant.EventConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.ChannelDefinitionQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.EventDeploymentEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.EventDefinitionEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.EventResourceEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.ChannelDefinitionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.ChannelDefinitionEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.EventDeploymentEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.EventResourceEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.EventDefinitionEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.EventDefinitionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.ChannelDefinitionEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.AbstractEventRegistryNoRevisionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.EventRegistryEntityConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.ChannelDefinitionEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.data.impl.MybatisEventDefinitionDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.data.impl.MybatisEventDeploymentDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.data.impl.MybatisEventResourceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.data.impl.MybatisChannelDefinitionDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.data.AbstractEventDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.data.EventDefinitionDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.data.ChannelDefinitionDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.data.EventDeploymentDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.data.EventResourceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.EventDefinitionEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.EventResourceEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.EventDeploymentEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.EventDeploymentEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.EventResourceEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.entity.ResourceRef",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.deploy.ChannelDefinitionCacheEntry",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.deploy.EventDefinitionCacheEntry",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.deploy.EventDeploymentManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.deploy.Deployer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.AbstractManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.persistence.ResourceRefTypeHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.tenantdetector.JsonPointerBasedInboundEventTenantDetector",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.tenantdetector.XpathBasedInboundEventTenantDetector",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.tenantdetector.InboundEventStaticTenantDetector",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl$InboundKafkaChannelBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl$InboundEventTenantJsonDetectorBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.EventModelBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl$InboundEventPayloadJsonExtractorBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl$InboundEventTenantDetectorBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl$InboundEventTenantXmlDetectorBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.OutboundChannelDefinitionBuilderImpl$OutboundJmsChannelBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.OutboundChannelDefinitionBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl$InboundRabbitChannelBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.OutboundChannelDefinitionBuilderImpl$OutboundKafkaChannelBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl$InboundEventPayloadExtractorBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl$InboundEventDefinitionKeyDetectorBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl$InboundEventPayloadXmlExtractorBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.OutboundChannelDefinitionBuilderImpl$OutboundEventProcessingPipelineBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl$InboundEventKeyXmlDetectorBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl$InboundEventKeyJsonDetectorBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl$InboundEventProcessingPipelineBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.OutboundChannelDefinitionBuilderImpl$OutboundRabbitChannelBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl$InboundEventTransformerBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.model.InboundChannelDefinitionBuilderImpl$InboundJmsChannelBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.DeploymentQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.db.DbSchemaDrop",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.db.EventDbSchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.db.EntityDependencyOrder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.db.EntityToTableMap",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.EventDefinitionQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.EventRegistryEngineConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.consumer.BaseEventRegistryEventConsumer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.consumer.CorrelationKey",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.EventDeploymentQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.event.FlowableEventRegistryEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.EventManagementServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.DefaultEventRegistry",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.DefaultCorrelationKeyGenerator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.ChannelModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.OutboundChannelModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.InboundChannelModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.KafkaOutboundChannelModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.RabbitOutboundChannelModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.EventModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.DelegateExpressionOutboundChannelModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.KafkaInboundChannelModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.ChannelEventTenantIdDetection",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.DelegateExpressionInboundChannelModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.JmsInboundChannelModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.KafkaInboundChannelModel$CustomProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.JmsOutboundChannelModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.ChannelEventKeyDetection",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.RabbitInboundChannelModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.model.EventPayload",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.json.converter.ChannelJsonConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.json.converter.InboundChannelModelValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.json.converter.ChannelValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.json.converter.OutboundChannelModelValidator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.json.converter.EventJsonConverter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.json.converter.FlowableEventJsonException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.api.EventSubscriptionQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.api.EventSubscriptionBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.api.EventSubscription",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.configurator.deployer.EventDeployer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventregistry.impl.configurator.EventRegistryEngineConfigurator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.EventSubscriptionServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.util.CommandContextUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.EventSubscriptionQueryValue",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.EventSubscriptionBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.EventSubscriptionQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.MessageEventSubscriptionEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.CompensateEventSubscriptionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.AbstractEventSubscriptionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.EventSubscriptionServiceEntityConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.EventSubscriptionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.EventSubscriptionEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.MessageEventSubscriptionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.GenericEventSubscriptionEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.SignalEventSubscriptionEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.GenericEventSubscriptionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.CompensateEventSubscriptionEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.EventSubscriptionEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.impl.cachematcher.SignalEventSubscriptionByScopeIdAndTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.impl.cachematcher.EventSubscriptionsBySubScopeIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.impl.cachematcher.MessageEventSubscriptionsByProcInstAndEventNameMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.impl.cachematcher.EventSubscriptionsByProcInstTypeAndActivityMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.impl.cachematcher.EventSubscriptionsByExecutionAndTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.impl.cachematcher.EventSubscriptionsByExecutionIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.impl.cachematcher.EventSubscriptionsByScopeDefinitionIdAndTypeAndNullScopeIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.impl.cachematcher.SignalEventSubscriptionByScopeAndEventNameMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.impl.cachematcher.EventSubscriptionsByScopeDefinitionIdAndTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.impl.cachematcher.SignalEventSubscriptionByNameAndExecutionMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.impl.cachematcher.EventSubscriptionsByNameMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.impl.cachematcher.SignalEventSubscriptionByProcInstAndEventNameMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.impl.cachematcher.SignalEventSubscriptionByEventNameMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.impl.MybatisEventSubscriptionDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.EventSubscriptionDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.data.AbstractEventSubscriptionDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.SignalEventSubscriptionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.entity.EventSubscriptionEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.persistence.AbstractManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.db.EventSubscriptionDbSchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.impl.EventSubscriptionQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.EventSubscriptionService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.eventsubscription.service.EventSubscriptionServiceConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.HistoricTaskLogEntryQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.NativeHistoricTaskLogEntryQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.HistoricTaskInstanceQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.util.CountingTaskUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.util.CommandContextUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.HistoricTaskLogEntryBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.NativeTaskQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.TaskQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.NativeHistoricTaskInstanceQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.HistoricTaskLogEntryQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.TaskServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.HistoricTaskInstanceQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.HistoricTaskServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.AbstractTaskServiceEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.HistoricTaskInstanceEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.TaskEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.HistoricTaskLogEntryEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.HistoricTaskLogEntryEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.TaskEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.HistoricTaskInstanceEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.HistoricTaskLogEntryEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.TaskEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.TaskEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.AbstractTaskServiceVariableScopeEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.AbstractTaskServiceEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.HistoricTaskInstanceEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.HistoricTaskInstanceEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.TaskServiceEntityConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.data.impl.MybatisTaskDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.data.impl.MybatisHistoricTaskInstanceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.data.impl.MyBatisHistoricTaskLogEntryDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.data.impl.cachematcher.TasksByProcessInstanceIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.data.impl.cachematcher.TasksBySubScopeIdAndScopeTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.data.impl.cachematcher.TasksByExecutionIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.data.impl.cachematcher.TasksByScopeIdAndScopeTypeMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.data.HistoricTaskLogEntryDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.data.HistoricTaskInstanceDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.data.TaskDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.entity.HistoricTaskLogEntryEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.SingleCachedEntityMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.AbstractManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.persistence.CountingTaskEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.DefaultTaskPostProcessor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.db.TaskDbSchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.BaseHistoricTaskLogEntryBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.TaskQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.impl.BaseTaskBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.InternalTaskVariableScopeResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.delegate.BaseTaskListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.delegate.DelegateTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.delegate.TaskListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.InternalTaskLocalizationManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.TaskService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.InternalTaskAssignmentManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.history.InternalHistoryTaskManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.history.NativeHistoricTaskInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.HistoricTaskService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.TaskServiceConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.TaskPostProcessor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.service.event.impl.FlowableTaskEventBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.Event",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.TaskQueryInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.TaskQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.TaskCompletionBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.TaskInfoQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.DelegationState",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.TaskInfoQueryWrapper",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.NativeTaskQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.history.HistoricTaskInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.history.HistoricTaskLogEntryBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.history.NativeHistoricTaskLogEntryQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.history.HistoricTaskLogEntryQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.history.HistoricTaskQueryInterceptor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.history.HistoricTaskInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.history.HistoricTaskLogEntryType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.history.HistoricTaskLogEntry",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.Task",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.TaskBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.task.api.TaskInfo",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.InternalJobCompatibilityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.MoveTimerJobsToExecutableJobsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.GetJobExceptionStacktraceCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.AcquireTimerJobsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.GetJobByCorrelationIdCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.GetJobExceptionStacktraceCmd$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.DeleteJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.MoveSuspendedJobToExecutableJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.BulkMoveTimerJobsToExecutableJobsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.SetTimerJobRetriesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.ExecuteAsyncJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.ExecuteHistoryJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.UnlockExclusiveJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.AcquireExternalWorkerJobsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.DeleteTimerJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.AbstractExternalWorkerJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.MoveJobToDeadLetterJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.DeleteSuspendedJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.MoveDeadLetterJobToExecutableJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.UnacquireOwnedJobsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.JobType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.LockExclusiveJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.ExecuteAsyncRunnableJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.UnlockTimerJobsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.SetJobRetriesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.AcquireJobsWithGlobalAcquireLockCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.MoveTimerToExecutableJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.MoveDeadLetterJobToHistoryJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.GetHistoryJobAdvancedConfigurationCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.AcquireTimerJobsWithGlobalAcquireLockCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.AcquireJobsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.ExecuteJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.ExternalWorkerJobFailCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.DeleteDeadLetterJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.DeleteExternalWorkerJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.CancelJobsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.cmd.DeleteHistoryJobCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.JobProcessorContextImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.JobServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.util.CommandContextUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.HistoryJobQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.ServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.DeadLetterJobQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.JobQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.AcquiredExternalWorkerJobImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.ExternalWorkerJobAcquireBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.JobManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.multitenant.TenantAwareAcquireTimerJobsRunnable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.multitenant.SharedExecutorServiceAsyncExecutor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.multitenant.TenantAwareAsyncExecutor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.multitenant.TenantAwareAcquireAsyncJobsDueRunnable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.multitenant.TenantAwareExecuteAsyncRunnableFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.multitenant.TenantAwareAsyncExecutorFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.multitenant.TenantAwareResetExpiredJobsRunnable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.multitenant.ExecutorPerTenantAsyncExecutor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.multitenant.SharedExecutorServiceAsyncExecutor$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.multitenant.TenantAwareExecuteAsyncRunnable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.ExecuteAsyncRunnable$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.AcquireTimerJobsRunnable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.AsyncJobAddedNotification",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.UnacquireAsyncHistoryJobExceptionHandler$1$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.DefaultAsyncRunnableExecutionExceptionHandler$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.AbstractAsyncExecutor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.ExecuteAsyncRunnable$2",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.AsyncRunnableExecutionExceptionHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.JobAddedTransactionListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.DefaultAsyncJobExecutor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.AcquireAsyncJobsDueLifecycleListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.message.AsyncJobMessageReceiver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.message.AbstractMessageBasedJobManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.message.AsyncJobMessageReceiver$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.message.AsyncJobMessageHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.message.AbstractMessageBasedJobManager$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.AcquireAsyncJobsDueRunnable$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.AcquireTimerLifecycleListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.FailedJobCommandFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.ExecuteAsyncRunnable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.AcquireAsyncJobsDueRunnable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.AcquiredHistoryJobEntities",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.ExecuteAsyncRunnableFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.DefaultAsyncRunnableExecutionExceptionHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.DefaultDebuggerExecutionExceptionHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.DefaultAsyncJobExecutor$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.DefaultJobManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.UnacquireAsyncHistoryJobExceptionHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.FailedJobListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.ResetExpiredJobsRunnable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.FindExpiredJobsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.ManagedAsyncJobExecutor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.ResetExpiredJobsCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.UnacquireAsyncHistoryJobExceptionHandler$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.AsyncExecutor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.AcquireTimerJobsRunnable$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.DefaultAsyncHistoryJobExecutor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.TimerJobQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.AbstractJobEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.JobServiceEntityConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.AbstractJobEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.JobEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.ExternalWorkerJobEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.AbstractRuntimeJobEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.ExternalWorkerJobEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.DeadLetterJobEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.DeadLetterJobEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.TimerJobEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.AbstractJobServiceEngineEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.TimerJobEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.SuspendedJobEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.AbstractJobServiceEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.SuspendedJobEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.TimerJobEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.HistoryJobEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.DeadLetterJobEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.SuspendedJobEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.JobEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.ExternalWorkerJobEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.DeadLetterJobEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.JobEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.ExternalWorkerJobEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.JobInfoEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.impl.MybatisHistoryJobDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.impl.MybatisDeadLetterJobDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.impl.MybatisJobDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.impl.MybatisExternalWorkerJobDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.impl.cachematcher.JobsByExecutionIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.impl.cachematcher.TimerJobsByExecutionIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.impl.cachematcher.SuspendedJobsByExecutionIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.impl.cachematcher.TimerJobsByScopeIdAndSubScopeIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.impl.cachematcher.ExternalWorkerJobsByExecutionIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.impl.cachematcher.ExternalWorkerJobsByScopeIdAndSubScopeIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.impl.cachematcher.JobByCorrelationIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.impl.cachematcher.DeadLetterJobsByExecutionIdMatcher",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.impl.MybatisTimerJobDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.impl.MybatisSuspendedJobDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.ExternalWorkerJobDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.JobDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.JobInfoDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.SuspendedJobDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.DeadLetterJobDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.TimerJobDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.data.HistoryJobDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.HistoryJobEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.TimerJobEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.HistoryJobEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.JobInfoEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.JobInfoEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.JobEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.SuspendedJobEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.entity.HistoryJobEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.persistence.AbstractManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.AsyncHistoryJobNotApplicableException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.AsyncHistoryJobZippedHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.AsyncHistorySession",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.AsyncHistoryCommittedTransactionListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.util.AsyncHistoryJsonUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.AbstractAsyncHistoryJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.AsyncHistoryListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.transformer.HistoryJsonTransformer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.AsyncHistorySession$AsyncHistorySessionData",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.message.AsyncHistoryJobMessageReceiver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.message.AsyncHistoryJobMessageReceiver$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.message.AsyncHistoryJobMessageHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.AsyncHistoryDateUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.AsyncHistorySessionFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.TriggerAsyncHistoryExecutorTransactionListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.DefaultAsyncHistoryJobProducer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.AsyncHistorySessionCommandContextCloseListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.history.async.AsyncHistoryJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.ExternalWorkerJobFailureBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.ExternalWorkerJobQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.db.JobDbSchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.HistoryJobServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.SuspendedJobQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.JobQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.TimerJobServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.impl.HistoryJobProcessorContextImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.JobProcessorContext$Phase",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.TimerJobService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.JobService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.HistoryJobProcessor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.HistoryJobService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.InternalJobParentStateResolver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.HistoryJobProcessorContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.JobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.JobProcessor",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.JobProcessorContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.JobServiceConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.InternalJobManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.HistoryJobHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.HistoryJobProcessorContext$Phase",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.event.impl.FlowableJobEventBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.service.ScopeAwareInternalJobManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.api.ExternalWorkerJobFailureBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.api.SuspendedJobQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.api.HistoryJobQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.api.ExternalWorkerJobQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.api.HistoryJob",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.api.ExternalWorkerJobAcquireBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.api.JobInfo",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.api.TimerJobQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.api.ExternalWorkerJob",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.api.JobQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.api.DeadLetterJobQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.api.JobNotFoundException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.api.AcquiredExternalWorkerJob",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.job.api.Job",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.BatchBuilderImpl$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.util.CommandContextUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.BatchServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.BatchBuilderImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.BatchQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.entity.BatchEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.entity.BatchEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.entity.BatchPartEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.entity.BatchPartEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.entity.BatchPartEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.entity.BatchEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.entity.BatchEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.entity.BatchServiceEntityConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.entity.data.impl.MybatisBatchDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.entity.data.impl.MybatisBatchPartDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.entity.data.BatchPartDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.entity.data.BatchDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.entity.AbstractBatchServiceEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.entity.BatchPartEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.persistence.AbstractManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.db.BatchDbSchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.impl.BatchQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.service.BatchServiceConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.api.BatchService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.api.BatchPart",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.api.BatchBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.api.BatchPartQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.api.BatchQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.batch.api.Batch",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.PrivilegeQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.UserQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.IdmEngineConfigurationApi",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.Picture",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.GroupQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.GroupQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.TokenQueryProperty",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.NativeTokenQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.Privilege",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.User",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.IdmManagementService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.IdmIdentityService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.NativeUserQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.NativeGroupQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.Group",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.PrivilegeMapping",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.UserQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.PasswordEncoder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.Token",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.TokenQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.PasswordSaltProvider",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.event.FlowableIdmMembershipEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.event.FlowableIdmEventType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.PasswordSalt",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.api.UserBaseQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.CreateTokenCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.DeleteUserInfoCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.DeletePrivilegeMappingCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.CreateTokenQueryCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.CreateMembershipCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.GetPrivilegeMappingsByPrivilegeIdCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.AddPrivilegeMappingCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.DeleteMembershipCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.CreatePrivilegeQueryCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.SetUserPictureCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.CreateUserQueryCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.GetGroupsWithPrivilegeCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.GetUsersWithPrivilegeCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.GetUserInfoKeysCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.CreateUserCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.SaveTokenCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.DeleteTokenCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.DeletePrivilegeCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.CheckPassword",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.DeleteGroupCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.SaveGroupCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.UpdateUserPasswordCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.GetPropertiesCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.CreateGroupCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.GetUserInfoCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.ExecuteCustomSqlCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.CreatePrivilegeCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.GetTableNameCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.CreateGroupQueryCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.SaveUserCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.GetUserPictureCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.DeleteUserCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cmd.SetUserInfoCmd",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.SchemaOperationsIdmEngineBuild",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.IdmIdentityServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.util.CommandContextUtil",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.PrivilegeQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.io.ResourceStreamSource",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.GroupQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.UserQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.NativeTokenQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cfg.StandaloneIdmEngineConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.cfg.StandaloneInMemIdmEngineConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.ByteArrayRefTypeHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.IdentityInfoEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.IdentityInfoEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.PrivilegeEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.PrivilegeEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.UserEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.PropertyEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.ByteArrayEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.MembershipEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.PrivilegeMappingEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.MembershipEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.AbstractIdmEngineEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.AbstractIdmEngineNoRevisionEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.AbstractIdmEngineEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.IdmEngineEntityConstants",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.PropertyEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.UserEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.TokenEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.IdentityInfoEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.ByteArrayEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.TokenEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.GroupEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.PrivilegeMappingEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.PrivilegeMappingEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.PrivilegeEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.GroupEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.IdmPropertyEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.PrivilegeEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.IdentityInfoEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.PrivilegeMappingEntityManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.UserEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.IdmByteArrayEntityImpl$PersistentState",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.IdmByteArrayEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.UserEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.MembershipEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.AbstractIdmEngineEntityManager$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.TokenEntityManagerImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.PrivilegeMappingDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.impl.MybatisUserDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.impl.MybatisIdentityInfoDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.impl.MybatisByteArrayDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.impl.MybatisGroupDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.impl.MybatisPrivilegeDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.impl.MybatisPropertyDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.impl.MybatisPrivilegeMappingDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.impl.MybatisTokenDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.impl.MybatisMembershipDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.MembershipDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.TokenDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.AbstractIdmDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.UserDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.IdentityInfoDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.PropertyDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.PrivilegeDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.ByteArrayDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.data.GroupDataManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.IdmPropertyEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.GroupEntity",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.TokenEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.ByteArrayRef",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.MembershipEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.GroupEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.entity.IdmByteArrayEntityImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.persistence.AbstractManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.IdmEngineImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.IdmManagementServiceImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.db.DbSchemaDrop",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.db.DbSchemaDrop$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.db.EntityDependencyOrder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.db.IdmDbSchemaManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.db.EntityToTableMap",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.TokenQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.authentication.ClearTextPasswordEncoder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.authentication.ApacheDigester$Digester",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.authentication.ApacheDigester$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.authentication.BlankSalt",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.authentication.PasswordSaltImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.authentication.TextSaltProvider",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.authentication.ApacheDigester",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.authentication.BlankSaltProvider",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.IdmManagementServiceImpl$1",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.NativeUserQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.impl.NativeGroupQueryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.delegate.event.impl.FlowableIdmMembershipEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.delegate.event.impl.FlowableIdmEventBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.delegate.event.impl.FlowableIdmEntityEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.delegate.event.impl.FlowableIdmEventImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.IdmEngine",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.IdmEngineConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.CustomExpressionFunctionRegistry",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.IdmEngines",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.idm.engine.configurator.IdmEngineConfigurator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.CallbackTypes",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.repository.CmmnDeploymentQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.repository.CmmnDeploymentBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.repository.CaseDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.repository.CaseDefinitionQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.repository.CmmnDeployment",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.listener.PlanItemInstanceLifecycleListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.listener.CaseInstanceLifecycleListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnMigrationService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnEngineConfigurationApi",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnRepositoryService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.StageResponse",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.SignalEventListenerInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.ChangePlanItemStateBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.GenericEventListenerInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.InjectedPlanItemInstanceBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.CaseInstanceBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.GenericEventListenerInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.PlanItemDefinitionType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.MilestoneInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.PlanItemInstanceTransitionBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.CaseInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.PlanItemInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.UserEventListenerInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.SignalEventListenerInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.CaseInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.PlanItemInstanceState",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.MilestoneInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.CaseInstanceState",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.PlanItemInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.UserEventListenerInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.runtime.CmmnExternalWorkerTransitionBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnHistoryCleaningManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnTaskService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.delegate.ReadOnlyDelegatePlanItemInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.delegate.PlanItemFutureJavaDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.delegate.PlanItemVariableAggregatorContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.delegate.FlowablePlanItemFutureJavaDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.delegate.PlanItemVariableAggregator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.delegate.PlanItemJavaDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.delegate.DelegatePlanItemInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.delegate.MapBasedFlowablePlanItemFutureJavaDelegate",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.CandidateManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.history.HistoricCaseInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.history.HistoricCaseInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.history.HistoricPlanItemInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.history.HistoricPlanItemInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.history.HistoricVariableInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.history.HistoricMilestoneInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.history.HistoricMilestoneInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnHistoryService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.DynamicCmmnService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.DecisionTableVariableManager",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnManagementService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnRuntimeService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.migration.CaseInstanceMigrationBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.migration.PlanItemDefinitionMappingBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.migration.CaseInstanceBatchMigrationResult",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.migration.CaseInstanceMigrationValidationResult",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.migration.PlanItemDefinitionMapping",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.migration.CaseInstanceMigrationDocument",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.migration.TerminatePlanItemDefinitionMapping",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.migration.MoveToAvailablePlanItemDefinitionMapping",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.migration.CaseInstanceMigrationDocumentBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.migration.ActivatePlanItemDefinitionMapping",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.api.event.FlowableCaseStartedEvent",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.CompletionNeutralRule",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.RepetitionRule",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.CmmnDiEdge",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.CaseTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.HttpServiceTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.FieldExtension",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.ScriptServiceTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.ExternalWorkerServiceTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.PlanFragment",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.Process",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.UserEventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.TaskWithFieldExtensions",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.CmmnElement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.PlanItemRule",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.PlanItemTransition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.HumanTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.PlanItemDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.HasExitCriteria",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.Milestone",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.ProcessTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.VariableAggregationDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.HasEntryCriteria",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.GenericEventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.IOParameter",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.ManualActivationRule",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.Association",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.CmmnModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.ExtensionElement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.SignalEventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.Decision",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.ServiceTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.HasLifecycleListeners",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.VariableAggregationDefinition$Variable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.Criterion",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.CaseElement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.Sentry",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.FlowableHttpRequestHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.Stage",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.PlanItemControl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.HasExtensionAttributes",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.ChildTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.Case",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.ExtensionAttribute",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.Task",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.BaseElement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.AbstractFlowableHttpHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.VariableAggregationDefinitions",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.EventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.RequiredRule",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.SentryOnPart",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.GraphicInfo",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.FlowableHttpResponseHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.PlanItem",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.DecisionTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.CasePageTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.ImplementationType",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.HasAssociations",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.TimerEventListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.CmmnDiShape",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.SendEventServiceTask",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.ParentCompletionRule",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.SentryIfPart",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.cmmn.model.FlowableListener",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DmnDeploymentBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DmnRepositoryService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DmnDecision",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DmnHistoricDecisionExecutionQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DecisionExecutionAuditContainer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DmnDecisionRuleResult",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DmnDecisionQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DmnHistoricDecisionExecution",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.ExecuteDecisionBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.ExecuteDecisionContext",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DecisionTypes",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DmnDeploymentQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.NativeDmnDeploymentQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DmnHistoryService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.RuleExecutionAuditContainer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DmnDeployment",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DmnDecisionService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DmnManagementService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DmnEngineConfigurationApi",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.NativeHistoricDecisionExecutionQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.ExpressionExecution",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.NativeDecisionQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.api.DecisionServiceExecutionAuditContainer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DRGElement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DmnDiDiagramElement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DmnDiShape",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DmnDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DecisionTable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DmnExtensionAttribute",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.OutputClause",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.InformationRequirement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.Invocable",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.Expression",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DmnExtensionElement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.HitPolicy",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.InputClause",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DmnElementReference",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DmnDiEdge",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.BuiltinAggregator",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DmnDiDiagram",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.Decision",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DiEdge",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.RuleInputClauseContainer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DmnDiDecisionServiceDividerLine",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.UnaryTests",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DecisionRule",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.NamedElement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.AuthorityRequirement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.InformationItem",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DmnElement",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.GraphicInfo",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.InputData",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DecisionService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.LiteralExpression",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.RuleOutputClauseContainer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.ItemDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.dmn.model.DecisionTableOrientation",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.model.ExpressionFormField",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.model.Option",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.model.FormOutcome",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.model.SimpleFormModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.model.OptionFormField",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.model.FormContainer",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.model.LayoutDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.model.FormFieldTypes",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.model.FormField",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormRepositoryService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.NativeFormDeploymentQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormDeploymentBuilder",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormFieldHandler",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormDeploymentQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormDeployment",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormInstanceQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormModel",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormEngineConfigurationApi",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.NativeFormDefinitionQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormInstanceInfo",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormInfo",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormDefinitionQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormManagementService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormDefinition",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.form.api.FormInstance",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.content.api.ContentService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.content.api.ContentMetaDataKeys",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.content.api.ContentItemBaseQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.content.api.ContentStorage",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.content.api.ContentObject",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.content.api.ContentEngineConfigurationApi",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.content.api.ContentStorageException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.content.api.ContentObjectStorageMetadata",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.content.api.ContentNotFoundException",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.content.api.ContentItemQuery",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.content.api.ContentItem",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.content.api.ContentManagementService",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },


  {
    "name": "org.flowable.common.engine.impl.de.odysseus.el.ExpressionFactoryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.spring.boot.app.AppEngineServicesAutoConfiguration",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.Map",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.HashMap",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.ibatis.javassist.util.proxy.ProxyFactory",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.ibatis.scripting.xmltags.XMLLanguageDriver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.ibatis.scripting.defaults.RawLanguageDriver",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.apache.ibatis.io.JBoss6VFS",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.io.DefaultVFS",
    "allPublicConstructors": true
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl",
    "allPublicConstructors": true
  },
  {
    "name": "java.util.ArrayList",
    "allPublicConstructors": true
  },
  {
    "name": "java.util.List",
    "allPublicConstructors": true
  },
  {
    "name": "java.util.Set",
    "allPublicConstructors": true
  },
  {
    "name": "java.util.HashSet",
    "allPublicConstructors": true
  },
  {
    "name": "java.util.Collection",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.type.InstantTypeHandler",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.type.LocalDateTimeTypeHandler",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.type.LocalDateTypeHandler",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.type.LocalTimeTypeHandler",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.type.OffsetDateTimeTypeHandler",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.type.OffsetTimeTypeHandler",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.type.ZonedDateTimeTypeHandler",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.type.MonthTypeHandler",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.type.YearTypeHandler",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.type.YearMonthTypeHandler",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.type.JapaneseDateTypeHandler",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.logging.slf4j.Slf4jImpl",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.logging.stdout.StdOutImpl",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.datasource.unpooled.UnpooledDataSourceFactory",
    "allPublicConstructors": true
  },
  {
    "name": "org.apache.ibatis.datasource.unpooled.UnpooledDataSource",
    "allPublicConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.apache.ibatis.annotations.Insert",
    "allPublicMethods": true
  },
  {
    "name": "org.apache.ibatis.session.Configuration",
    "allPublicMethods": true
  },
  {
    "name": "com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl",
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  }
]